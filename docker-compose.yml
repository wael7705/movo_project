
services:
  db:
    image: postgis/postgis:15-3.4-alpine
    restart: always
    environment:
      POSTGRES_DB: movo_system
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: movo2025
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --lc-collate=C --lc-ctype=C"
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL","pg_isready -U postgres -h 127.0.0.1"]
      interval: 10s
      timeout: 5s
      retries: 10

  pgbouncer:
    image: edoburu/pgbouncer:1.18.0
    restart: always
    depends_on:
      db:
        condition: service_healthy
    environment:
      AUTH_TYPE: md5
      AUTH_FILE: /etc/pgbouncer/userlist.txt
    volumes:
      - ./pgbouncer.ini:/etc/pgbouncer/pgbouncer.ini:ro
      - ./pgbouncer_userlist.txt:/etc/pgbouncer/userlist.txt:ro
    ports:
      - "6432:6432"
    healthcheck:
      test: ["CMD-SHELL","pg_isready -h db -U postgres -p 5432 || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 10

  app:
    build: .
    restart: always
    deploy:
      replicas: 4
    environment:
      DATABASE_URL: "postgresql+asyncpg://postgres:movo2025@pgbouncer:6432/movo_system"
      APP_MODULE: "backend.app:socket_app"
      WORKERS: "4"
      REDIS_URL: "redis://redis:6379/0"
      SOCKET_IO_PATH: "socket.io"
      PYTHONIOENCODING: "utf-8"
      LANG: "C.UTF-8"
      LC_ALL: "C.UTF-8"
    expose:
      - "8000"
    depends_on:
      pgbouncer:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL","curl -fsS http://localhost:8000/health || curl -fsS http://localhost:8000/api/v1/orders/counts || exit 1"]
      interval: 5s
      timeout: 3s
      retries: 40

  nginx:
    image: nginx:alpine
    restart: always
    depends_on:
      app:
        condition: service_started
    ports:
      - "8000:80"
    environment:
      LANG: "C.UTF-8"
      LC_ALL: "C.UTF-8"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./movo-ts/dist:/usr/share/nginx/html:ro

  redis:
    image: redis:7-alpine
    restart: always
    ports:
      - "6379:6379"

  grafana:
    image: grafana/grafana:10.4.0
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=movo2025
    volumes:
      - grafana_data:/var/lib/grafana
    depends_on:
      - pgbouncer
      - redis

volumes:
  grafana_data:

