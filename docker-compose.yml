
services:
  db:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL","pg_isready -U ${DB_USER}"]
      interval: 5s
      timeout: 3s
      retries: 20

  pgbouncer:
    image: bitnami/pgbouncer:latest
    restart: always
    environment:
      POSTGRESQL_HOST: db
      POSTGRESQL_PORT_NUMBER: "5432"
      POSTGRESQL_USERNAME: ${DB_USER}
      POSTGRESQL_PASSWORD: ${DB_PASS}
      PGBOUNCER_DATABASE: ${DB_NAME}
      PGBOUNCER_PORT: "6432"
      PGBOUNCER_POOL_MODE: "transaction"
      PGBOUNCER_DEFAULT_POOL_SIZE: "20"
      PGBOUNCER_MAX_CLIENT_CONN: "500"
      PGBOUNCER_IGNORE_STARTUP_PARAMETERS: "extra_float_digits"
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "6432:6432"

  app:
    build: .
    restart: always
    environment:
      DATABASE_URL: "postgresql+asyncpg://${DB_USER}:${DB_PASS}@pgbouncer:6432/${DB_NAME}"
      APP_MODULE: "${APP_MODULE}"
      WORKERS: "4"
    expose:
      - "8000"
    depends_on:
      pgbouncer:
        condition: service_started
    healthcheck:
      test: ["CMD-SHELL","curl -fsS http://localhost:8000/health || curl -fsS http://localhost:8000/api/v1/orders/counts || exit 1"]
      interval: 5s
      timeout: 3s
      retries: 40

  nginx:
    image: nginx:alpine
    restart: always
    depends_on:
      app:
        condition: service_started
    ports:
      - "8000:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./movo-ts/dist:/usr/share/nginx/html:ro

